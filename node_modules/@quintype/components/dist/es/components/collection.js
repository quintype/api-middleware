import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _objectSpread from "@babel/runtime/helpers/objectSpread";
import React from 'react';
import { getAssociatedTemplate } from "../utils";
import { InfiniteScroll } from './infinite-scroll';

function StoryNotImplemented() {
  return React.createElement("div", {
    "data-comment": "Story Template Not Implemented"
  });
}

function CollectionNotImplemented() {
  return React.createElement("div", {
    "data-comment": "Collection Template Not Implemented"
  });
}

function renderCollectionItem(collectionItem, index, collectionTemplates, storyTemplates) {
  var otherProps = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};

  switch (collectionItem.type) {
    case "collection":
      return React.createElement(collectionTemplates(getAssociatedTemplate(collectionItem), index), _objectSpread({
        key: "".concat(index, "-").concat(collectionItem.id),
        index: index,
        collection: collectionItem,
        metadata: collectionItem["associated-metadata"] || {}
      }, otherProps));

    case "story":
      return React.createElement(storyTemplates(index), _objectSpread({
        key: "".concat(index, "-").concat(collectionItem.id),
        index: index,
        story: collectionItem.story,
        metadata: collectionItem["associated-metadata"] || {}
      }, otherProps));

    default:
      return React.createElement("div", {
        "data-comment": "".concat(collectionItem.type, " not implemented")
      });
  }
} // Pass this the HomePage Collection


export function Collection(_ref) {
  var className = _ref.className,
      collection = _ref.collection,
      collectionTemplates = _ref.collectionTemplates,
      storyTemplates = _ref.storyTemplates,
      _ref$interstitial = _ref.interstitial,
      interstitial = _ref$interstitial === void 0 ? function () {
    return undefined;
  } : _ref$interstitial;
  var children = collection.items.map(function (collectionItem, index) {
    return renderCollectionItem(collectionItem, index, collectionTemplates, storyTemplates);
  }).reduce(function (arr, v, i) {
    return arr.concat([v, interstitial(i)]);
  }, []);
  return React.createElement("div", {
    className: className
  }, children);
}
Collection.defaultProps = {
  collectionTemplates: function collectionTemplates() {
    return CollectionNotImplemented;
  },
  storyTemplates: function storyTemplates() {
    return StoryNotImplemented;
  }
};
export function LazyCollection(_ref2) {
  var className = _ref2.className,
      collection = _ref2.collection,
      collectionTemplates = _ref2.collectionTemplates,
      storyTemplates = _ref2.storyTemplates,
      lazyAfter = _ref2.lazyAfter,
      otherProps = _objectWithoutProperties(_ref2, ["className", "collection", "collectionTemplates", "storyTemplates", "lazyAfter"]);

  return React.createElement("div", {
    className: className
  }, React.createElement(InfiniteScroll, {
    render: function render(_ref3) {
      var index = _ref3.index;
      return renderCollectionItem(collection.items[index], index, collectionTemplates, storyTemplates, otherProps);
    },
    items: collection.items,
    loadNext: function loadNext() {
      return [];
    },
    initiallyShow: lazyAfter,
    neverHideItem: true,
    showAllOnLegacyBrowser: true // No Op
    ,
    focusCallbackAt: 20,
    onFocus: function onFocus() {}
  }));
}
LazyCollection.defaultProps = {
  collectionTemplates: function collectionTemplates() {
    return CollectionNotImplemented;
  },
  storyTemplates: function storyTemplates() {
    return StoryNotImplemented;
  }
};