import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import React from "react";
import { connect } from "react-redux";
import { withError } from './with-error';

function getNativeShareHandler(canNativeShare, title, fullUrl) {
  if (!canNativeShare) {
    return null;
  }

  return function handleShare() {
    window.navigator.share({
      title: title,
      url: fullUrl
    })["catch"](console.error);
  };
}

var SocialShareBase =
/*#__PURE__*/
function (_React$Component) {
  _inherits(SocialShareBase, _React$Component);

  function SocialShareBase(props) {
    var _this;

    _classCallCheck(this, SocialShareBase);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(SocialShareBase).call(this, props));
    _this.state = {
      canNativeShare: false
    };
    return _this;
  }

  _createClass(SocialShareBase, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.setState({
        canNativeShare: global && global.navigator && global.navigator.share
      });
    }
  }, {
    key: "render",
    value: function render() {
      var fullUrl = this.props.fullUrl || "".concat(this.props.publisherUrl, "/").concat(this.props.url);
      var hashtags = this.props.hashtags ? this.props.hashtags : '';
      return React.createElement(this.props.template, Object.assign({
        fbUrl: "https://www.facebook.com/sharer.php?u=".concat(encodeURIComponent(fullUrl)),
        twitterUrl: "https://twitter.com/intent/tweet?url=".concat(encodeURIComponent(fullUrl), "&text=").concat(encodeURIComponent(this.props.title), "&hashtags=").concat(hashtags),
        gplusUrl: "https://plus.google.com/share?url=".concat(encodeURIComponent(fullUrl)),
        linkedinUrl: "https://www.linkedin.com/shareArticle?url=".concat(encodeURIComponent(fullUrl), "&title=").concat(encodeURIComponent(this.props.title)),
        whatsappUrl: "https://api.whatsapp.com/send?text=".concat(encodeURIComponent(fullUrl)),
        mailtoUrl: "mailto:".concat("?subject=", encodeURIComponent(this.props.title), "&body=").concat(encodeURIComponent(fullUrl)),
        handleNativeShare: getNativeShareHandler(this.state.canNativeShare, this.props.title, fullUrl)
      }, this.props));
    }
  }]);

  return SocialShareBase;
}(React.Component);

function mapStateToProps(state) {
  return {
    publisherUrl: state.qt.config["sketches-host"]
  };
}

export var SocialShare =
/*#__PURE__*/
connect(mapStateToProps, {})(
/*#__PURE__*/
withError(SocialShareBase));