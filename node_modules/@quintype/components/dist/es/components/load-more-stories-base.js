import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import React from 'react';
import get from "lodash/get";
import { removeDuplicateStories } from '../utils';
import { getRequest } from './api-client';
export var LoadMoreStoriesManager =
/*#__PURE__*/
function (_React$Component) {
  _inherits(LoadMoreStoriesManager, _React$Component);

  function LoadMoreStoriesManager(props) {
    var _this;

    _classCallCheck(this, LoadMoreStoriesManager);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoadMoreStoriesManager).call(this, props));
    _this.state = {
      loading: false,
      pageNumber: 1,
      moreStories: [],
      noMoreStories: false
    };
    return _this;
  }

  _createClass(LoadMoreStoriesManager, [{
    key: "stories",
    value: function stories() {
      return this.props.stories.concat(this.state.moreStories);
    }
  }, {
    key: "loadMore",
    value: function loadMore(e) {
      var _this2 = this;

      e.preventDefault();
      if (this.state.loading) return;
      var pageNumber = this.state.pageNumber;
      this.setState({
        loading: true,
        pageNumber: pageNumber + 1
      }, function () {
        _this2.props.loadStories(pageNumber).then(function (stories) {
          _this2.setState({
            loading: false,
            moreStories: _this2.state.moreStories.concat(removeDuplicateStories(_this2.stories(), stories)),
            noMoreStories: stories.length < _this2.props.numStoriesToLoad
          });
        });
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      return this.props.template(Object.assign({}, this.props, {
        stories: this.stories(),
        onLoadMore: function onLoadMore(e) {
          return _this3.loadMore(e);
        },
        loading: this.state.loading,
        noMoreStories: this.state.noMoreStories
      }));
    }
  }]);

  return LoadMoreStoriesManager;
}(React.Component);
export var LoadMoreStoriesBase =
/*#__PURE__*/
function (_React$Component2) {
  _inherits(LoadMoreStoriesBase, _React$Component2);

  function LoadMoreStoriesBase() {
    _classCallCheck(this, LoadMoreStoriesBase);

    return _possibleConstructorReturn(this, _getPrototypeOf(LoadMoreStoriesBase).apply(this, arguments));
  }

  _createClass(LoadMoreStoriesBase, [{
    key: "loadMoreStories",
    value: function loadMoreStories(pageNumber) {
      var _this4 = this;

      var stories = get(this.props, ['data', 'stories'], []);
      return getRequest(this.props.api || '/api/v1/stories', Object.assign({}, this.props.params, {
        offset: this.props.numStoriesToLoad * (pageNumber - 1) + stories.length,
        limit: this.props.numStoriesToLoad || 10,
        fields: this.props.fields
      })).json(function (response) {
        if (_this4.props.apiResponseTransformer) {
          return _this4.props.apiResponseTransformer(response);
        }

        return response.stories || get(response, ['results', 'stories'], []);
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this5 = this;

      return React.createElement(LoadMoreStoriesManager, Object.assign({}, this.props.data, {
        template: this.props.template,
        loadStories: function loadStories(pageNumber) {
          return _this5.loadMoreStories(pageNumber);
        },
        languageDirection: this.props.languageDirection,
        numStoriesToLoad: this.props.numStoriesToLoad || 10
      }));
    }
  }]);

  return LoadMoreStoriesBase;
}(React.Component);
export var LoadMoreCollectionStories =
/*#__PURE__*/
function (_React$Component3) {
  _inherits(LoadMoreCollectionStories, _React$Component3);

  function LoadMoreCollectionStories() {
    _classCallCheck(this, LoadMoreCollectionStories);

    return _possibleConstructorReturn(this, _getPrototypeOf(LoadMoreCollectionStories).apply(this, arguments));
  }

  _createClass(LoadMoreCollectionStories, [{
    key: "loadMoreStories",
    value: function loadMoreStories(pageNumber) {
      var stories = get(this.props, ['data', 'stories'], []);
      var authorId = get(this.props, ["authorId"], null);
      var url = authorId ? "/api/v1/authors/".concat(authorId, "/collection") : "/api/v1/collections/".concat(this.props.collectionSlug);
      return getRequest(url, Object.assign({}, this.props.params, {
        offset: this.props.numStoriesToLoad * (pageNumber - 1) + stories.length,
        limit: this.props.numStoriesToLoad || 10
      })).json(function (response) {
        return (response.items || []).map(function (item) {
          return item.story;
        });
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this6 = this;

      return React.createElement(LoadMoreStoriesManager, Object.assign({}, this.props.data, {
        template: this.props.template,
        loadStories: function loadStories(pageNumber) {
          return _this6.loadMoreStories(pageNumber);
        },
        languageDirection: this.props.languageDirection,
        numStoriesToLoad: this.props.numStoriesToLoad || 10
      }));
    }
  }]);

  return LoadMoreCollectionStories;
}(React.Component);