import get from "lodash/get";
import { BREAKING_NEWS_UPDATED, CLIENT_SIDE_RENDERED, PAGE_LOADING, NAVIGATE_TO_PAGE, PAGE_FINISHED_LOADING, HAMBURGER_CLICKED, HAMBURGER_CLOSED, MEMBER_UPDATED, MEMBER_BEING_LOADED, SUBSCRIPTION_GROUP_UPDATED, PAYMENT_OPTIONS_UPDATED, ACCESS_BEING_LOADED, ACCESS_UPDATED, METER_UPDATED } from './actions';
import { computeAccess } from "../utils";

function setToTrueOnEvent() {
  var events = Array.from(arguments);
  return function () {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
    var action = arguments.length > 1 ? arguments[1] : undefined;
    return state || events.includes(action.type);
  };
}

function breakingNewsReducer() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var action = arguments.length > 1 ? arguments[1] : undefined;

  switch (action.type) {
    case BREAKING_NEWS_UPDATED:
      return action.stories;

    default:
      return state;
  }
}

var breakingNewsLoadedReducer =
/*#__PURE__*/
setToTrueOnEvent(BREAKING_NEWS_UPDATED);
var clientSideRenderedReducer =
/*#__PURE__*/
setToTrueOnEvent(CLIENT_SIDE_RENDERED);

function pageLoadingReducer() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  var action = arguments.length > 1 ? arguments[1] : undefined;

  switch (action.type) {
    case PAGE_LOADING:
      return true;

    case NAVIGATE_TO_PAGE:
      return false;

    case PAGE_FINISHED_LOADING:
      return false;

    default:
      return state;
  }
}

function hamburgerOpenedReducer() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  var action = arguments.length > 1 ? arguments[1] : undefined;

  switch (action.type) {
    case HAMBURGER_CLICKED:
      return true;

    case HAMBURGER_CLOSED:
      return false;

    case NAVIGATE_TO_PAGE:
      return false;

    default:
      return state;
  }
}

function memberReducer() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
  var action = arguments.length > 1 ? arguments[1] : undefined;

  switch (action.type) {
    case MEMBER_UPDATED:
      return action.member;

    default:
      return state;
  }
}

function memberLoadingReducer() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
  var action = arguments.length > 1 ? arguments[1] : undefined;

  switch (action.type) {
    case MEMBER_BEING_LOADED:
      return true;

    case MEMBER_UPDATED:
      return false;

    default:
      return state;
  }
}

function subscriptionReducer() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var action = arguments.length > 1 ? arguments[1] : undefined;

  switch (action.type) {
    case SUBSCRIPTION_GROUP_UPDATED:
      return action.subscriptions;

    default:
      return state;
  }
}

function paymentOptionsReducer() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var action = arguments.length > 1 ? arguments[1] : undefined;

  switch (action.type) {
    case PAYMENT_OPTIONS_UPDATED:
      return action.paymentOptions;

    default:
      return state;
  }
}

function accessLoadingReducer() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
  var action = arguments.length > 1 ? arguments[1] : undefined;

  switch (action.type) {
    case ACCESS_BEING_LOADED:
      return action.loading;

    default:
      return state;
  }
}

function accessReducer() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var action = arguments.length > 1 ? arguments[1] : undefined;

  switch (action.type) {
    case ACCESS_UPDATED:
      return computeAccess(state, action);

    default:
      return state;
  }
}

function meteringReducer() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;
  var action = arguments.length > 1 ? arguments[1] : undefined;

  switch (action.type) {
    case METER_UPDATED:
      return action.meterCount;

    default:
      return state;
  }
}

export var ComponentReducers = {
  breakingNews: breakingNewsReducer,
  breakingNewsLoaded: breakingNewsLoadedReducer,
  clientSideRendered: clientSideRenderedReducer,
  pageLoading: pageLoadingReducer,
  hamburgerOpened: hamburgerOpenedReducer,
  member: memberReducer,
  memberLoading: memberLoadingReducer,
  subscriptions: subscriptionReducer,
  paymentOptions: paymentOptionsReducer,
  accessLoading: accessLoadingReducer,
  access: accessReducer,
  meteringCount: meteringReducer
};